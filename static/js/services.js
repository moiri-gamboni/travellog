// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  var srv;

  srv = angular.module('myApp.services', []);

  srv.factory('Map', [
    '$scope', '$rootScope', 'Country', function($scope, $rootScope, Country) {
      var map;
      map = {
        countries: [],
        current: 0,
        availableCountries: [],
        initMap: function() {
          return $http.get(window.location.protocol + "//" + window.location.host + "/countries/").success(function(data, status, headers, config) {
            var country, i, j, _i, _j;
            if (data.result != null) {
              console.log(data.result);
              this.availableCountries = shuffle(data.result);
              for (i = _i = 0; _i <= 5; i = ++_i) {
                if (this.availableCountries.length !== 0) {
                  country = new Country(this.availableCountries.pop());
                } else {
                  break;
                }
                for (j = _j = 0; _j <= 5; j = ++_j) {
                  if (country.hasLogs()) {
                    country.getLog();
                  } else {
                    break;
                  }
                }
                this.countries.push(country);
              }
              return this.current = 1;
            }
          }).error(function(data, status, headers, config) {
            return console.log(data);
          });
        }
      };
      return map;
    }
  ]);

  srv.factory('Country', [
    '$http', 'id', function($http, id) {
      var country,
        _this = this;
      country = {
        name: "",
        id: id,
        savedLogs: [],
        availableLogs: [],
        hasLogs: function() {
          return _this.availableLogs.length !== 0;
        },
        getCountry: function() {
          country = null;
          return $http.get(window.location.protocol + "//" + window.location.host + "/country/", {
            params: {
              id: id
            }
          }).success(function(data, status, headers, config) {
            var j, _i, _results;
            if (data.result != null) {
              console.log(data.result);
              this.name = data.result.name;
              this.availableLogs = shuffle(data.result.logs);
              _results = [];
              for (j = _i = 0; _i <= 2; j = ++_i) {
                if (this.hasLogs()) {
                  _results.push(this.getLog());
                } else {
                  break;
                }
              }
              return _results;
            }
          }).error(function(data, status, headers, config) {
            return console.log(data);
          });
        },
        getLog: function() {
          id = this.availableLogs[this.availableLogs.length(-1)];
          return $http.get(window.location.protocol + "//" + window.location.host + "/logs/", {
            params: {
              id: id
            }
          }).success(function(data, status, headers, config) {
            if (data.result != null) {
              console.log(data.result);
              this.savedLogs.push(data.result.log);
              return this.availableLogs.pop();
            }
          }).error(function(data, status, headers, config) {
            return console.log(data);
          });
        }
      };
      return country;
    }
  ]);

}).call(this);
