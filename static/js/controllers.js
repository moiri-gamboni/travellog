// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  var ctrl;

  ctrl = angular.module("mainModule.controllers", []);

  ctrl.controller("mainCtrl", [
    '$http', '$scope', '$rootScope', '$timeout', 'Map', function($http, $scope, $rootScope, $timeout, Map) {
      var switchLogs;
      Map.initMap();
      switchLogs = true;
      $scope.enterfade = "";
      $scope.applyclass = "";
      $rootScope.loadingposition = "";
      $rootScope.$on('history-change', function(logId) {
        console.log("history change");
        console.log(logId);
        Map.data.current = Map.data.logs[logId].key;
        if (switchLogs) {
          return $scope.otherLog = Map.data.logs[logId];
        } else {
          return $scope.log = Map.data.logs[logId];
        }
      });
      $scope.$watch(function() {
        return $rootScope.loadingposition;
      }, function() {
        return $scope.getClass();
      });
      $scope.enter = function() {
        if ((typeof miniMap !== "undefined" && miniMap !== null) && loadingDone) {
          return $rootScope.loadingposition = "center big";
        }
      };
      $scope.popout = function() {
        return $rootScope.loadingposition = "corner small";
      };
      $scope.getClass = function() {
        $scope.applyclass = (window.loadingDone ? "fadeout" : "") + " " + $rootScope.loadingposition;
        console.log($scope.applyclass);
        return $scope.enterfade = window.loadingDone ? "fadein" : "";
      };
      $scope.dropPins = function() {
        var dropPin, i, log, logId, _ref;
        dropPin = function(log) {
          return function() {
            return placeMarkerMiniMap(log);
          };
        };
        i = 0;
        _ref = Map.data.logs;
        for (logId in _ref) {
          log = _ref[logId];
          $timeout(dropPin(log), 200 * i);
          i++;
        }
        return $timeout(function() {
          changeLocation($scope.log.id);
          $(".main.fade").removeClass("fadeout");
          $rootScope.loadingposition = "corner small";
          $scope.getClass();
          return window.loadingDone = true;
        }, 200 * Object.keys(Map.data.logs).length);
      };
      $rootScope.$on('update-load', function() {
        return $scope.getClass();
      });
      $rootScope.$on('animation-done', function() {
        return switchLogs = !switchLogs;
      });
      $rootScope.$on('gotFirstLog', function() {
        $scope.log = Map.getCurrentLog();
        return $scope.getClass();
      });
      $rootScope.$on('map-init', function() {
        return $scope.dropPins();
      });
      $rootScope.$on('map-ready', function() {
        return $scope.$watch(function() {
          return window.loadingDone;
        }, function() {
          return $scope.getClass();
        });
      });
      $scope.getLog = function() {
        return $scope.log = Map.getCurrentLog();
      };
      return $scope.move = function(direction) {
        if (window.loadingDone) {
          if (switchLogs) {
            $scope.otherLog = Map.move(direction);
            return changeLocation($scope.otherLog.id);
          } else {
            $scope.log = Map.move(direction);
            return changeLocation($scope.log.id);
          }
        }
      };
    }
  ]);

  ctrl.controller("MyFilesController", [
    '$http', '$scope', '$rootScope', 'User', function($http, $scope, $rootScope, User) {
      var callback,
        _this = this;
      $rootScope.showing = 'loading';
      $scope.loggedIn = false;
      $scope.myfilesa = {
        "title": "empty"
      };
      $scope.selectedFile = null;
      $scope.addMapSelected = false;
      $scope.overlayIsActive = false;
      $scope.loadingMessage = "";
      $scope.completeUrl = "";
      $scope.successMessage = "";
      callback = function(passedScope) {
        return function(event, resp) {
          console.log("finishing login");
          User = resp;
          console.log(User);
          passedScope.$apply(function() {
            return passedScope.loggedIn = true;
          });
          passedScope.loading = true;
          passedScope.loadingMessage = "Loading your drive(this could take a while)";
          retrieveAllFiles(function(resp) {
            passedScope.$apply(function() {
              return passedScope.myfiles = resp;
            });
            console.log("finishing up");
            $scope.$apply(function() {
              return $scope.loading = false;
            });
            return angular.element("html").scope().$broadcast('update-load');
          });
          return startAddMap();
        };
      };
      $rootScope.$on('loggedIn', callback($scope));
      $rootScope.$on('addMapSelected', function() {
        return $scope.$apply(function() {
          return $scope.addMapSelected = true;
        });
      });
      $scope.submitAgain = function() {
        return $scope.complete = false;
      };
      $scope.isSelected = function(file) {
        return file === $scope.selectedFile;
      };
      $scope.selectFile = function(file) {
        return $scope.selectedFile = file;
      };
      $scope.changeShowing = function(view) {
        if (window.loadingDone) {
          $rootScope.loadingposition = "big center";
          return $rootScope.showing = view;
        }
      };
      $scope.$watch(function() {
        return $scope.loading;
      }, function() {
        return $scope.getShowing();
      });
      $scope.getShowing = function() {
        var returnVal;
        if ($rootScope.showing === "help") {
          return $rootScope.showing;
        }
        returnVal = "";
        if ($rootScope.showing === "addFile") {
          if ($scope.loading) {
            window.loadingDone = false;
            returnVal = 'loading';
          } else if ($scope.complete) {
            window.loadingDone = true;
            returnVal = 'complete';
          } else if ($scope.loggedIn) {
            window.loadingDone = true;
            setTimeout(function() {
              return google.maps.event.trigger(addMap, 'resize');
            }, 200);
            returnVal = 'loggedIn';
          } else {
            returnVal = 'login';
          }
        }
        angular.element("html").scope().$broadcast('update-load');
        console.log(returnVal);
        return returnVal;
      };
      $scope.canSubmit = function() {
        return $scope.addMapSelected && ($scope.selectedFile != null);
      };
      $scope.activateOverlay = function(view) {
        $scope.overlayIsActive = true;
        $rootScope.loadingposition = "big center";
        console.log($rootScope.loadingposition);
        return $scope.changeShowing(view);
      };
      $scope.overlayActive = function() {
        return $scope.overlayIsActive;
      };
      $scope.upload = function() {
        var payload;
        if (!$scope.canSubmit()) {
          return;
        }
        payload = {
          gdriveId: $scope.selectedFile.id,
          lat: addMapMarker.position.lat(),
          lng: addMapMarker.position.lng()
        };
        if (User.isPlusUser != null) {
          payload.profileId = User.id;
        } else {
          payload.profileName = User.name;
        }
        $scope.loadingMessage = "Sharing your story!";
        $scope.loading = true;
        return makePublic(payload.gdriveId, function(resp) {
          console.log("made Public");
          console.log(resp);
          return addToTravellog(payload.gdriveId, function(resp) {
            console.log("shared to travellog");
            console.log(resp);
            return $http({
              method: "POST",
              url: "/logs",
              data: payload
            }).success(function(data, status, headers, config) {
              $scope.loading = false;
              $scope.complete = true;
              if (data.status === 200) {
                $scope.completeUrl = "http://www.travellog.io/log/" + $scope.selectedFile.id;
                return $scope.successMessage = "Congratulations, your travel log has been uploaded and is available at:";
              } else {
                $scope.completeUrl = "";
                return $scope.successMessage = data.error;
              }
            }).error(function(data, status, headers, config) {});
          });
        });
      };
      return $scope.startLogin = function() {
        if (!$scope.loggedIn) {
          $scope.loading = true;
          return $scope.loadingMessage = "Logging you in";
        }
      };
    }
  ]);

}).call(this);
